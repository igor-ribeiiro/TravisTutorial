language: android
jdk: oraclejdk8
# Turn off caching to avoid any caching problems
cache: false
sudo: true
env:
  global:
    - ANDROID_API_LEVEL=25
    - ANDROID_BUILD_TOOLS_VERSION=25.0.2
    - ADB_INSTALL_TIMEOUT=2 # minutes (If ABD instalation pass this time, the build will throw an error)

android:
  components:
    - platform-tools
    - tools
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - android-$ANDROID_API_LEVEL
    # Google Play Services
    - extra-google-google_play_services
    # Support library
    - extra-android-support
    # Latest artifacts in local repository
    - extra-google-m2repository
    - extra-android-m2repository

  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+
    - android-sdk-license-5be876d5

# This step is made for automatic acception of licenses whenever Travis builds the code.
before_install:
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - chmod +x gradlew
  - ./gradlew dependencies || true

# This will install the b4a command line interface tool and configure it
install:
  - curl https://raw.githubusercontent.com/back4app/parse-cli/back4app/installer.sh | sudo /bin/bash
  - sudo apt-get update
  - sudo apt-get install build-essential checkinstall libssl-dev
  - sudo apt-get install expect
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
  - export NVM_DIR="$HOME/.nvm"
  - . "$NVM_DIR/nvm.sh" # This loads nvm
  - [ -s "$NVM_DIR/nvm.sh" ]
  - nvm install node
  - nvm use node
  - command -v nvm
  - npm --version
  - node --version
  - sudo npm install

# Run your main script
script:
  # Compile your java application
  - ./gradlew -PdisablePreDex
  # Run our test script, if it fails, it will not deploy
  - npm --version
  - node --version
  - sudo npm run test
  - npm --version
  - node --version

after_success:
  # Run the script that will make the deploy if the tests pass
  - ./script.exp

